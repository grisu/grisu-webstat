<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>nesi</artifactId>
		<groupId>nz.org.nesi</groupId>
		<version>0.23</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
  <groupId>grisu.web</groupId>
  <artifactId>grisu-webstat</artifactId>
  <packaging>war</packaging>
  <version>0.1-SNAPSHOT</version>
  <name>Vaadin Web Application</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vaadin.version>6.8.2</vaadin.version>
    <gwt.version>2.3.0</gwt.version>
    <gwt.plugin.version>2.2.0</gwt.plugin.version>
  </properties>

  <build>
  <finalName>grisu-webstat</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <!-- Compile custom GWT components or widget dependencies with the GWT compiler -->
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <version>${gwt.plugin.version}</version>
        <configuration>
          <webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
          <runTarget>grisu-web</runTarget>
          <hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
          <noServer>true</noServer>
          <port>8080</port>
          <compileReport>false</compileReport>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>resources</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwt.version}</version>
          </dependency>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwt.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>1.0.2</version>
        <executions>
          <execution>
            <configuration>
            </configuration>
            <goals>
              <goal>update-widgetset</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      

      <!-- A simple Jetty test server at http://localhost:8080/grisu-web can be launched with the Maven goal jetty:run 
        and stopped with jetty:stop -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.24</version>
        <configuration>
          <stopPort>9966</stopPort>
          <stopKey>grisu-web</stopKey>
          <!-- Redeploy every x seconds if changes are detected, 0 for no automatic redeployment -->
          <scanIntervalSeconds>0</scanIntervalSeconds>
          <!-- make sure Jetty also finds the widgetset -->
          <webAppConfig>
            <contextPath>/grisu-web</contextPath>
            <baseResource implementation="org.mortbay.resource.ResourceCollection">
              <!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
              <!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
              <resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
            </baseResource>
          </webAppConfig>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>com.vaadin</groupId>
    								<artifactId>
    									vaadin-maven-plugin
    								</artifactId>
    								<versionRange>
    									[1.0.2,)
    								</versionRange>
    								<goals>
    									<goal>update-widgetset</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>

		<repository>
			<id>releases</id>
			<url>http://code.ceres.auckland.ac.nz/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>

    
  </repositories>

  <!--
  <pluginRepositories>
    <pluginRepository>
      <id>codehaus-snapshots</id>
      <url>http://nexus.codehaus.org/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
    <pluginRepository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>
  -->

  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin</artifactId>
      <version>${vaadin.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <version>${gwt.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>1.0.0.GA</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
	</dependency>
    -->
    <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>5.0.8</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>grisu.backend</groupId>
    	<artifactId>grisu-core</artifactId>
    	<version>0.5.18-SNAPSHOT</version>
    </dependency>
    <dependency>
   <groupId>org.vaadin.addons</groupId>
   <artifactId>refresher</artifactId>
   <version>1.1.1</version>
</dependency>
    
  </dependencies>



	<profiles>

		<profile>
			<id>deb</id>
			<!-- <activation> -->
			<!-- <property> -->
			<!-- <name>BUILD_NUMBER</name> -->
			<!-- </property> -->
			<!-- </activation> -->

			<build>
				<plugins>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>copy-deb-control</id>
								<!-- here the phase you need -->
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/deb/control</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/src/deb/control</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>fix_permission</id>
								<phase>prepare-package</phase>
								<configuration>
									<target>
										<chmod file="target/deb/control/postinst" perm="755" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>fix_deb_version</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includes>
								<include>target/classes/grisu-webstat.version</include>
								<include>target/deb/control/control</include>
							</includes>
							<ignoreMissingFile>false</ignoreMissingFile>

							<replacements>
								<replacement>
									<token>VERSION_TOKEN</token>
									<value>${project.version}</value>
								</replacement>
							</replacements>
						</configuration>
					</plugin>


					<plugin>
						<artifactId>jdeb</artifactId>
						<groupId>org.vafer</groupId>
						<version>0.9</version>
						<executions>
							<execution>
								<phase>package</phase>
								<id>build-deb</id>
								<goals>
									<goal>jdeb</goal>
								</goals>
								<configuration>
									<changesIn>CHANGES.txt</changesIn>
									<deb>[[buildDir]]/grisu-webstat-${project.version}.deb</deb>
									<controlDir>target/deb/control</controlDir>
									<!-- <installDir>/opt/grisu</installDir> -->
									<dataSet>
										<data>
											<src>${project.build.directory}/${project.build.finalName}.war</src>
											<type>file</type>
											<mapper>
												<type>perm</type>
												<prefix>/var/lib/grisu/</prefix>
												<user>tomcat6</user>
												<group>tomcat6</group>
											</mapper>
										</data>

										<data>
											<src>${project.basedir}/src/deb/data/grisu-webstat.xml</src>
											<type>file</type>
											<mapper>
												<type>perm</type>
												<prefix>/etc/tomcat6/Catalina/localhost/</prefix>
												<user>tomcat6</user>
												<group>tomcat6</group>
											</mapper>
										</data>


									</dataSet>

								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>


		<profile>
			<id>rpm</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
						<version>2.1-alpha-1</version>
						<executions>
							<execution>
								<goals>
									<goal>attached-rpm</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<copyright>2011, University of Auckland</copyright>
							<distribution>Grisu</distribution>
							<group>Application/Other</group>
							<!-- <icon>src/main/resources/icon.gif</icon> -->
							<packager>Markus Binsteiner</packager>
							<!-- <prefix>/usr/local</prefix> -->
							<version>${project.version}</version>
							<!-- <changelogFile>src/changelog</changelogFile> -->
							<!-- <defineStatements> -->
							<!-- <defineStatement>_unpackaged_files_terminate_build 0</defineStatement> -->
							<!-- </defineStatements> -->
							<mappings>
								<mapping>
									<directory>/var/lib/grisu</directory>
									<filemode>755</filemode>
									<username>tomcat</username>
									<groupname>tomcat</groupname>
									<sources>
										<source>
											<location>${project.build.directory}/${project.build.finalName}.war</location>
										</source>
									</sources>
								</mapping>

								<mapping>
									<directory>/etc/tomcat6/Catalina/localhost</directory>
									<filemode>755</filemode>
									<username>tomcat</username>
									<groupname>tomcat</groupname>
									<sources>
										<source>
											<location>${project.basedir}/src/deb/data/grisu-webstat.xml</location>
										</source>
									</sources>
								</mapping>

							</mappings>
							<requires>
								<require>java-1.6.0-openjdk</require>
								<require>tomcat6</require>
								<!-- <require>tomcat6-systemv</require> -->
							</requires>
							<postinstallScriptlet>
								<script>

									service tomcat6 stop
									

									# remove deployed webapp from tomcat, just to be sure
									if [ -d /var/lib/tomcat6/webapps/grisu-ws ]; then
										rm -rf /var/lib/tomcat6/webapps/grisu-webstat
									fi

									# adjust permissions
									if [ ! -d /var/lib/grisu/ ]; then
										mkdir -p /var/lib/grisu/
									fi

									chown -R tomcat:tomcat /var/lib/grisu


									# create log dir
									if [ ! -d /var/log/grisu ]; then
										mkdir /var/log/grisu
										chown -R tomcat:tomcat /var/log/grisu
									fi


									service tomcat6 start




								</script>
							</postinstallScriptlet>
							<!-- <postinstallScriptlet> <scriptFile>src/main/scripts/postinstall</scriptFile> 
								<fileEncoding>utf-8</fileEncoding> </postinstallScriptlet> <preremoveScriptlet> 
								<scriptFile>src/main/scripts/preremove</scriptFile> <fileEncoding>utf-8</fileEncoding> 
								</preremoveScriptlet> -->
						</configuration>
					</plugin>
				</plugins>
			</build>


		</profile>

		<profile>
			<id>exe-war</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.simplericity.jettyconsole</groupId>
						<artifactId>jetty-console-maven-plugin</artifactId>
						<version>1.42</version>
						<executions>
							<execution>
								<goals>
									<goal>createconsole</goal>
								</goals>
								<configuration>
									<backgroundImage>${basedir}/src/main/resources/nesi.jpg</backgroundImage>
								</configuration>
							</execution>
						</executions>

					</plugin>

				</plugins>

			</build>

		</profile>
	</profiles>


</project>
