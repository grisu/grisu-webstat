package grisu.web;

import grisu.backend.hibernate.UserDAO;
import grisu.backend.model.User;
import grisu.backend.model.job.JobStat;

import java.util.LinkedList;
import java.util.List;

import vo.Users;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;

public class UserTable extends CustomComponent {

	@AutoGenerated
	private Panel mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Table tblUser;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	
	public UserTable(String caption) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here

		tblUser.setSelectable(true);
		tblUser.setColumnReorderingAllowed(true);
		mainLayout.setCaption(caption);
		tblUser.setSizeFull();
		tblUser.setPageLength(30);
		tblUser.setHeight("100%");

		horizontalLayout_1.setComponentAlignment(tblUser, Alignment.TOP_CENTER);
	}

	public void addListener(ValueChangeListener valueChangeListener) {
		// TODO Auto-generated method stub
		tblUser.addListener(valueChangeListener);
	}

	public void setTable(BeanItemContainer<JobStat> jobStatContainer) {
		// TODO Auto-generated method stub
		tblUser.setContainerDataSource(jobStatContainer);
	}



	public Object getTabcleClickVal() {
		// TODO Auto-generated method stub
		return tblUser.getValue();
	}

	public void populate(BeanItemContainer userContainer) {
		// TODO Auto-generated method stub
		tblUser.setContainerDataSource(userContainer);
//		for(Iterator iter = (Iterator) tblUser.getItemIds().iterator(); iter.hasNext();)
//		{
//			int itemId = (Integer)iter.next();
//			Item userData=tblUser.getItem(itemId);
//			userData.getItemProperty("dn").getValue();
//			
//		}
		
		tblUser.setVisibleColumns(new Object [] {"userName"});
		tblUser.setValue(userContainer.getItem(userContainer.getIdByIndex(0)));
	}

	public Object getSelectedUser() {
		// TODO Auto-generated method stub
		return tblUser.getValue();
	}

	public void setPageSize() {
		// TODO Auto-generated method stub
		int rowCount = tblUser.getVisibleItemIds().size();
		tblUser.setPageLength(rowCount);
		System.out.println(rowCount);
	}

	public void populate() {
		// TODO Auto-generated method stub
		UserDAO userDao = new UserDAO();
		List<User> users = userDao.findAllUsers();
		
		
		List<Users> userList = new LinkedList<Users>();
		Users temp;
		String dn;
		String usrName;
		for(User usr:users)
		{
			temp= new Users();
			dn= usr.getDn();
			
			temp.setDn(usr.getDn());
			
			usrName = dn.substring(dn.indexOf("CN=")+3, dn.length());
			if(usrName.contains(" ")){
				usrName=usrName.substring(0, usrName.lastIndexOf(" "));
			}
			temp.setUserName(usrName);
			userList.add(temp);
		}

		System.out.println("user list size:"+users.size());
		BeanItemContainer<Users> userContainer = new BeanItemContainer<Users>(Users.class);
		
		userContainer.addAll(userList);			
		tblUser.setContainerDataSource(userContainer);
		
		tblUser.setVisibleColumns(new Object [] {"userName"});
		tblUser.select(tblUser.firstItemId());
		fireComponentEvent();
	}

	@AutoGenerated
	private Panel buildMainLayout() {
		// common part: create layout
		mainLayout = new Panel();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("100.0%");
		horizontalLayout_1.setMargin(false);
		
		// tblUser
		tblUser = new Table();
		tblUser.setImmediate(true);
		tblUser.setWidth("-1px");
		tblUser.setHeight("100.0%");
		horizontalLayout_1.addComponent(tblUser);
		
		return horizontalLayout_1;
	}

}
