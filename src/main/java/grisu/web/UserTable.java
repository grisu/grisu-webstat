package grisu.web;

import grisu.backend.hibernate.JobStatDAO;
import grisu.backend.hibernate.UserDAO;
import grisu.backend.model.User;
import grisu.backend.model.job.JobStat;

import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;

import vo.Users;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.DefaultItemSorter;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.ColumnGenerator;

public class UserTable extends CustomComponent {

	@AutoGenerated
	private Panel mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Table tblUser;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	
	public UserTable(String caption) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		tblUser.setSelectable(true);
		tblUser.setColumnReorderingAllowed(true);
		mainLayout.setCaption(caption);
		tblUser.setSizeFull();
		tblUser.setPageLength(30);
		tblUser.setHeight("100%");

		horizontalLayout_1.setComponentAlignment(tblUser, Alignment.TOP_CENTER);
	}

	public void addListener(ValueChangeListener valueChangeListener) {
		// TODO Auto-generated method stub
		tblUser.addListener(valueChangeListener);
	}

	public void setTable(BeanItemContainer<JobStat> jobStatContainer) {
		// TODO Auto-generated method stub
		tblUser.setContainerDataSource(jobStatContainer);
	}



	public Object getTabcleClickVal() {
		// TODO Auto-generated method stub
		return tblUser.getValue();
	}

	public Object getSelectedUser() {
		// TODO Auto-generated method stub
		return tblUser.getValue();
	}

	//populate the user-list in left pane
	public void populate() {
		// TODO Auto-generated method stub
	
		UserDAO userDao = new UserDAO();
		List<User> users = userDao.findAllUsers();
		List<Users> userList = new LinkedList<Users>();
		Users temp = null;
		for(User user:users){
			temp= new Users();
			temp.setDn(user.getDn());
			userList.add(temp);
		}
		
		BeanItemContainer<Users> userContainer = new BeanItemContainer<Users>(Users.class);

		userContainer.addAll(userList);
		tblUser.setContainerDataSource(userContainer);
		tblUser.setVisibleColumns(new Object [] {"userName", "pendingJobCount", "runningJobCount", "jobCount"});
		tblUser.setColumnHeaders(new String[] {"User Names","Pending Jobs","Running Jobs", "Total jobs"});
		
		tblUser.select(tblUser.firstItemId());

		fireComponentEvent();
		
		userContainer.setItemSorter(new DefaultItemSorter(new Comparator<Object>() {
			
			public int compare(Object obj1, Object obj2) {
				// TODO Auto-generated method stub
				if(obj1 instanceof String && obj2 instanceof String)
				{
					int i1, i2;
					String s1=(String)obj1;
					String s2=(String)obj2;
					try{
						if(s1.contains("("))
						{
							s1=s1.substring(0,s1.indexOf("(")-1);
							s2=s2.substring(0,s2.indexOf("(")-1);
							System.out.println(s1+":"+s2);
						}
						i1=Integer.parseInt(s1);
						i2=Integer.parseInt(s2);
						return (i1-i2);
					}
					catch(NumberFormatException nfe){
						System.out.println("nfe "+nfe.getMessage());
						return ((String)obj1).toLowerCase().compareTo(((String) obj2).toLowerCase());
					}
				}
				else	
				{
					return ((Integer)obj1-(Integer)obj2);
				}
			}
		}));
	}

	//on auto-refresh
	public void refresh() {
		// TODO Auto-generated method stub

		JobStatDAO jsDao = new JobStatDAO();
		
		Item tblItem=null;
		String dn=null;
		int running;
		for(Object id:tblUser.getItemIds())
		{
			tblItem=tblUser.getItem(id);
			dn=(String) tblItem.getItemProperty("dn").getValue();
			running = jsDao.findRunningJobCount(dn);
			tblItem.getItemProperty("jobCount").setValue(""+jsDao.findJobCount(dn));
			tblItem.getItemProperty("pendingJobCount").setValue(jsDao.findPendingJobCount(dn));
			tblItem.getItemProperty("runningJobCount").setValue(""+running);
		}
	}	
	
	
	@AutoGenerated
	private Panel buildMainLayout() {
		// common part: create layout
		mainLayout = new Panel();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("100.0%");
		horizontalLayout_1.setMargin(false);
		
		// tblUser
		tblUser = new Table();
		tblUser.setImmediate(true);
		tblUser.setWidth("-1px");
		tblUser.setHeight("100.0%");
		horizontalLayout_1.addComponent(tblUser);
		
		return horizontalLayout_1;
	}

}
