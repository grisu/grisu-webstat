package grisu.web;

import javassist.bytecode.Descriptor.Iterator;
import grisu.backend.model.User;
import grisu.backend.model.job.JobStat;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class UserTable extends CustomComponent {

	@AutoGenerated
	private Panel mainLayout;
	@AutoGenerated
	private Table tblUser;

	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	
	
	public UserTable(String caption) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here

		tblUser.setSelectable(true);
		tblUser.setColumnReorderingAllowed(true);
		mainLayout.setCaption(caption);
		

	}

	public void addListener(ValueChangeListener valueChangeListener) {
		// TODO Auto-generated method stub
		tblUser.addListener(valueChangeListener);
	}

	public void setTable(BeanItemContainer<JobStat> jobStatContainer) {
		// TODO Auto-generated method stub
		tblUser.setContainerDataSource(jobStatContainer);
	}



	public Object getTabcleClickVal() {
		// TODO Auto-generated method stub
		return tblUser.getValue();
	}

	@AutoGenerated
	private Panel buildMainLayout() {
		// common part: create layout
		mainLayout = new Panel();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// tblUser
		tblUser = new Table();
		tblUser.setImmediate(true);
		tblUser.setWidth("-1px");
		tblUser.setHeight("100%");
		mainLayout.addComponent(tblUser);
		
		return mainLayout;
	}

	public void populate(BeanItemContainer userContainer) {
		// TODO Auto-generated method stub
		tblUser.setContainerDataSource(userContainer);
//		for(Iterator iter = (Iterator) tblUser.getItemIds().iterator(); iter.hasNext();)
//		{
//			int itemId = (Integer)iter.next();
//			Item userData=tblUser.getItem(itemId);
//			userData.getItemProperty("dn").getValue();
//			
//		}
		
		tblUser.setVisibleColumns(new Object [] {"userName"});
	}

	public Object getSelectedUser() {
		// TODO Auto-generated method stub
		return tblUser.getValue();
	}

}
